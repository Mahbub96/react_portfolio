name: Build and Deploy to VPS

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/yarn
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Next.js
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
        run: |
          echo "Skipping MongoDB connection for build if needed"
          yarn build

      - name: Archive production build
        run: |
          tar -czf deploy.tar.gz \
            .next \
            public \
            package.json \
            yarn.lock \
            next.config.js \
            ecosystem.config.js

      - name: Upload build to VPS
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "deploy.tar.gz"
          target: "/var/www/html/mahbub.dev/"

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            cd /var/www/html/mahbub.dev
            rm -rf .next public package.json yarn.lock next.config.js || true
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            yarn install --production
            pm2 stop next-app || true
            pm2 start ecosystem.config.js --env production
            pm2 save
            echo "âœ… Deployment completed successfully!"
