name: Build and Deploy to VPS

on:
  push:
    branches:
      - deploy

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build

      - name: Archive build files
        run: tar -czf build.tar.gz .next package.json next.config.js public

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: build.tar.gz

  deploy:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: site-build

      - name: Show workspace files (debug)
        run: ls -la

      - name: Copy build files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_SSH_VPS }}
          source: "build.tar.gz"
          target: "/var/www/html/mahbub.dev"

      - name: SSH into VPS and Deploy
        uses: appleboy/ssh-action@v1.2.0
        env:
          RUN_SEED: ${{ secrets.RUN_SEED }}
        with:
          host: ${{ secrets.IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_SSH_VPS }}
          script: |
            # Load NVM and Node
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 18
            nvm use 18

            # Absolute paths
            export PATH="$HOME/.nvm/versions/node/$(nvm version)/bin:$PATH"
            NODE_BIN=$(which node)
            NPM_BIN=$(which npm)
            PM2_BIN=$(which pm2 || $NPM_BIN bin -g)/pm2

            echo "Node: $NODE_BIN"
            echo "NPM: $NPM_BIN"
            echo "PM2: $PM2_BIN"

            cd /var/www/html/mahbub.dev || exit 1

            # Verify artifact and extract
            if [ ! -f build.tar.gz ]; then
              echo "build.tar.gz not found in deployment directory"
              ls -la
              exit 1
            fi
            tar -xzf build.tar.gz
            rm build.tar.gz

            # Install production dependencies
            $NPM_BIN ci --production

            # Optional: run seed script only if RUN_SEED env is set to "true"
            if [ "$RUN_SEED" = "true" ]; then
              echo "Running seed script as requested (RUN_SEED=true)"
              $NPM_BIN run seed || echo "Seed script failed (non-fatal)"
            else
              echo "Skipping seed (set RUN_SEED=true in GitHub Secrets to enable)"
            fi

            # Start or restart Next.js app with PM2
            $PM2_BIN restart next-app || $PM2_BIN start $NPM_BIN --name "next-app" -- start
            $PM2_BIN save

            # Restart nginx to apply any new configurations
            sudo systemctl restart nginx
            sudo systemctl status nginx --no-pager
            sudo systemctl enable nginx
