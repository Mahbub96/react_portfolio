name: Build and Deploy to VPS

on:
  push:
    branches:
      - deploy

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Archive full project
        run: tar -czf build.tar.gz --ignore-failed-read package.json package-lock.json next.config.js tsconfig.json public src scripts

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: build.tar.gz

  deploy:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: site-build

      - name: Copy build files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_SSH_VPS }}
          source: "build.tar.gz"
          target: "/var/www/html/mahbub.dev"

      - name: SSH into VPS and Deploy
        uses: appleboy/ssh-action@v1.2.0
        env:
          RUN_SEED: ${{ secrets.RUN_SEED }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        with:
          host: ${{ secrets.IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_SSH_VPS }}
          script: |
            # Load NVM (if using Node via NVM)
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            # Use Node version where PM2 is installed
            nvm use 22 || true

            # Use global PM2
            PM2_BIN=$(which pm2)
            echo "PM2 found at: $PM2_BIN"

            cd /var/www/html/mahbub.dev || exit 1

            # Extract uploaded source
            if [ ! -f build.tar.gz ]; then
              echo "build.tar.gz not found"
              ls -la
              exit 1
            fi
            tar -xzf build.tar.gz
            rm build.tar.gz

            # Install production dependencies
            npm ci --production

            # Optional seed script
            if [ "$RUN_SEED" = "true" ]; then
              echo "Running seed script"
              npm run seed || echo "Seed script failed"
            else
              echo "Skipping seed"
            fi

            # Start or restart app using PM2 (idempotent)
            if $PM2_BIN describe next-app > /dev/null 2>&1; then
              echo "Restarting existing PM2 process..."
              $PM2_BIN restart next-app
            else
              echo "Starting new PM2 process..."
              $PM2_BIN start npm --name "next-app" -- start
            fi

            # Save current PM2 process list
            $PM2_BIN save

            # Restart nginx to pick up any changes
            sudo systemctl restart nginx
            sudo systemctl status nginx --no-pager
            sudo systemctl enable nginx
