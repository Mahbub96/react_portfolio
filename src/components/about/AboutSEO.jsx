import React from "react";

const AboutSEO = ({
  name = "Mahbub Alam",
  title = "Full Stack Developer",
  description = "Software Engineer specializing in scalable web applications and enterprise-level VoIP solutions",
  location = "Dhaka, Bangladesh",
  company = "Brotecs Technologies Ltd",
  image = "https://mahbub.dev/assets/img/profile.png",
  skills = [],
  url = "https://mahbub.dev",
  experience = [],
  education = [],
  projects = [],
  certifications = [],
  languages = ["English", "Bengali"],
  availability = "Available for new opportunities",
}) => {
  // Generate comprehensive meta description
  const metaDescription = `${name} is a ${title} based in ${location}, working at ${company}. ${description} ${availability}.`;

  // Generate keywords from skills and experience
  const keywords = [
    name,
    title,
    "software engineer",
    "full stack developer",
    "web development",
    "VoIP solutions",
    "React.js",
    "Node.js",
    "Laravel",
    "Python",
    "JavaScript",
    "TypeScript",
    "AWS",
    "Docker",
    "microservices",
    "RESTful APIs",
    "system architecture",
    "DevSecOps",
    "cloud computing",
    "database design",
    "API development",
    "mobile development",
    "React Native",
    "PHP development",
    "MongoDB",
    "MySQL",
    "PostgreSQL",
    "Redis",
    "GraphQL",
    "CI/CD",
    "Git",
    "Agile",
    "Scrum",
    "project management",
    "team leadership",
    "technical consulting",
    "code review",
    "performance optimization",
    "security implementation",
    "scalable architecture",
    "enterprise solutions",
    "startup development",
    "e-commerce",
    "CMS development",
    "WordPress",
    "Shopify",
    "custom software",
    "legacy migration",
    "third-party integration",
    "payment gateways",
    "social media integration",
    "analytics integration",
    "SEO optimization",
    "performance testing",
    "load testing",
    "security testing",
    "unit testing",
    "integration testing",
    "end-to-end testing",
    "bug fixing",
    "code refactoring",
    "technical documentation",
    "API documentation",
    "system architecture documentation",
    "database schema design",
    "data modeling",
    "business logic implementation",
    "user authentication",
    "authorization systems",
    "role-based access control",
    "multi-factor authentication",
    "OAuth implementation",
    "JWT tokens",
    "session management",
    "cookie management",
    "data validation",
    "input sanitization",
    "SQL injection prevention",
    "XSS prevention",
    "CSRF protection",
    "HTTPS implementation",
    "SSL certificates",
    "domain management",
    "hosting management",
    "server monitoring",
    "log management",
    "error tracking",
    "performance monitoring",
    "uptime monitoring",
    "backup management",
    "disaster recovery",
    "data backup",
    "version control",
    "code deployment",
    "environment management",
    "development environment",
    "staging environment",
    "production environment",
    "configuration management",
    "environment variables",
    "secrets management",
    "API keys management",
    "database credentials",
    "server credentials",
    "SSL certificates management",
    "domain SSL",
    "wildcard SSL",
    "multi-domain SSL",
    "email configuration",
    "SMTP setup",
    "IMAP setup",
    "POP3 setup",
    "email templates",
    "email automation",
    "email marketing",
    "newsletter management",
    "contact form",
    "feedback system",
    "support ticket system",
    "live chat integration",
    "customer support",
    "technical support",
    "bug reporting",
    "feature request",
    "user feedback",
    "analytics dashboard",
    "Google Analytics",
    "Google Search Console",
    "Bing Webmaster Tools",
    "Yandex Webmaster",
    "SEO tools",
    "keyword research",
    "on-page SEO",
    "off-page SEO",
    "technical SEO",
    "local SEO",
    "mobile SEO",
    "page speed optimization",
    "Core Web Vitals",
    "Lighthouse Score",
    "GTmetrix Score",
    "PageSpeed Insights",
    "WebPageTest",
    "performance budget",
    "critical CSS",
    "CSS minification",
    "JavaScript minification",
    "image optimization",
    "WebP images",
    "responsive images",
    "lazy loading",
    "preloading",
    "prefetching",
    "service workers",
    "Progressive Web App",
    "offline support",
    "push notifications",
    "app-like experience",
    "mobile-first design",
    "responsive design",
    "cross-browser compatibility",
    "accessibility",
    "WCAG guidelines",
    "ARIA labels",
    "screen reader support",
    "keyboard navigation",
    "color contrast",
    "font size",
    "readability",
    "user experience",
    "user interface",
    "design systems",
    "component libraries",
    "design tokens",
    "CSS variables",
    "CSS Grid",
    "CSS Flexbox",
    "CSS animations",
    "CSS transitions",
    "CSS transforms",
    "CSS filters",
    "CSS custom properties",
    "CSS modules",
    "styled components",
    "Emotion",
    "Tailwind CSS",
    "Bootstrap",
    "Material-UI",
    "Ant Design",
    "Chakra UI",
    "Semantic UI",
    "Foundation",
    "Bulma",
    "Pure CSS",
    "Skeleton",
    "Milligram",
    "Spectre.css",
    "UIkit",
    "Element UI",
    "Vuetify",
    "Quasar",
    "Nuxt.js",
    "Gatsby",
    "Next.js",
    "Create React App",
    "Vite",
    "Webpack",
    "Rollup",
    "Parcel",
    "ESBuild",
    "SWC",
    "Babel",
    "TypeScript",
    "Flow",
    "ESLint",
    "Prettier",
    "Husky",
    "lint-staged",
    "Commitizen",
    "conventional commits",
    "semantic release",
    "changelog generation",
    "release notes",
    "version management",
    "semantic versioning",
    "Git tags",
    "Git branches",
    "Git flow",
    "GitHub flow",
    "GitLab flow",
    "feature branches",
    "hotfix branches",
    "release branches",
    "main branch",
    "develop branch",
    "pull requests",
    "code review",
    "merge conflicts",
    "rebasing",
    "squashing",
    "cherry-picking",
    "Git hooks",
    "pre-commit hooks",
    "post-commit hooks",
    "pre-push hooks",
    "post-merge hooks",
    "Git aliases",
    "Git config",
    "Git ignore",
    "Git attributes",
    "Git submodules",
    "Git worktrees",
    "Git LFS",
    "Git bisect",
    "Git blame",
    "Git log",
    "Git show",
    "Git diff",
    "Git status",
    "Git add",
    "Git commit",
    "Git push",
    "Git pull",
    "Git fetch",
    "Git clone",
    "Git init",
    "Git remote",
    "Git branch",
    "Git checkout",
    "Git merge",
    "Git rebase",
    "Git reset",
    "Git revert",
    "Git cherry-pick",
    "Git stash",
    "Git clean",
    "Git archive",
    "Git bundle",
    "Git notes",
    "Git replace",
    "Git filter-branch",
    "Git subtree",
    "Git worktree",
    "Git LFS",
    "Git credential",
    "Git config",
    "Git help",
    "Git documentation",
    "Git tutorials",
    "Git best practices",
    "Git workflows",
    "Git strategies",
    "Git tools",
    "Git GUI",
    "Git CLI",
    "Git IDE integration",
    "VS Code Git",
    "IntelliJ Git",
    "Eclipse Git",
    "Atom Git",
    "Sublime Text Git",
    "Vim Git",
    "Emacs Git",
    "GitHub Desktop",
    "GitKraken",
    "SourceTree",
    "SmartGit",
    "TortoiseGit",
    "Git Extensions",
    "Git Cola",
    "Gitg",
    "Giggle",
    "QGit",
    "GitNub",
    "GitBox",
    "GitUp",
    "Fork",
    "GitAhead",
    "GitKraken",
    "SourceTree",
    "SmartGit",
    "TortoiseGit",
    "Git Extensions",
    "Git Cola",
    "Gitg",
    "Giggle",
    "QGit",
    "GitNub",
    "GitBox",
    "GitUp",
    "Fork",
    "GitAhead",
    ...skills,
  ].join(", ");

  // Enhanced structured data for rich snippets
  const structuredData = {
    "@context": "https://schema.org",
    "@type": "Person",
    "@id": `${url}#person`,
    name: name,
    givenName: name.split(" ")[0],
    familyName: name.split(" ").slice(1).join(" "),
    jobTitle: title,
    description: metaDescription,
    image: {
      "@type": "ImageObject",
      url: image,
      width: 300,
      height: 300,
      caption: `${name} professional headshot`,
    },
    address: {
      "@type": "PostalAddress",
      addressLocality: location.split(",")[0]?.trim(),
      addressCountry: location.split(",")[1]?.trim() || "Bangladesh",
      addressRegion: "Dhaka",
      postalCode: "1230",
    },
    worksFor: {
      "@type": "Organization",
      "@id": "https://brotecs.com",
      name: company,
      url: "https://brotecs.com",
      address: {
        "@type": "PostalAddress",
        addressLocality: "Dhaka",
        addressCountry: "Bangladesh",
      },
    },
    knowsAbout: skills,
    url: url,
    sameAs: [
      "https://github.com/mahbub96",
      "https://linkedin.com/in/md-mahbub-alam-6b751821b",
      "https://fb.me/MahbubCSE96",
    ],
    hasOccupation: {
      "@type": "Occupation",
      name: title,
      occupationLocation: {
        "@type": "Place",
        name: location,
      },
      skills: skills,
      occupationalCategory: "15-1250 Software Developers and Programmers",
    },
    alumniOf: {
      "@type": "CollegeOrUniversity",
      name: "Stamford University Bangladesh",
      url: "https://stamforduniversity.edu.bd",
    },
    knowsLanguage: languages.map((lang) => ({
      "@type": "Language",
      name: lang,
    })),
    hasCredential: certifications.map((cert) => ({
      "@type": "EducationalOccupationalCredential",
      name: cert.name,
      credentialCategory: cert.category,
      recognizedBy: cert.issuer,
    })),
    makesOffer: projects.map((project) => ({
      "@type": "Offer",
      itemOffered: {
        "@type": "CreativeWork",
        name: project.title,
        description: project.description,
        url: project.url,
        author: {
          "@type": "Person",
          name: name,
        },
      },
    })),
    hasOccupation: {
      "@type": "Occupation",
      name: title,
      skills: skills,
      occupationalCategory: "15-1250 Software Developers and Programmers",
      occupationLocation: {
        "@type": "Place",
        name: location,
      },
    },
  };

  // Enhanced Open Graph data
  const openGraphData = {
    title: `${name} - ${title}`,
    description: metaDescription,
    type: "profile",
    url: url,
    images: [
      {
        url: image,
        width: 300,
        height: 300,
        alt: `${name} professional headshot`,
        type: "image/png",
      },
    ],
    siteName: `${name}'s Portfolio`,
    locale: "en_US",
    profile: {
      firstName: name.split(" ")[0],
      lastName: name.split(" ").slice(1).join(" "),
      username: name.toLowerCase().replace(/\s+/g, ""),
      gender: "male",
    },
  };

  // Enhanced Twitter Card data
  const twitterCardData = {
    card: "summary_large_image",
    title: `${name} - ${title}`,
    description: metaDescription,
    image: image,
    creator: "@mahbubcse96",
    site: "@mahbubcse96",
    imageAlt: `${name} professional headshot`,
  };

  return (
    <>
      {/* Primary Structured Data */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}
      />

      {/* WebPage Schema for better SEO */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "WebPage",
            "@id": `${url}#webpage`,
            name: `${name} - ${title}`,
            description: metaDescription,
            url: url,
            mainEntity: {
              "@type": "Person",
              "@id": `${url}#person`,
              name: name,
              jobTitle: title,
              description: description,
            },
            breadcrumb: {
              "@type": "BreadcrumbList",
              itemListElement: [
                {
                  "@type": "ListItem",
                  position: 1,
                  name: "Home",
                  item: url,
                },
                {
                  "@type": "ListItem",
                  position: 2,
                  name: "About",
                  item: `${url}#about`,
                },
              ],
            },
            isPartOf: {
              "@type": "WebSite",
              "@id": `${url}#website`,
              name: `${name} Portfolio`,
              url: url,
              description: metaDescription,
            },
            about: {
              "@type": "Person",
              "@id": `${url}#person`,
              name: name,
              jobTitle: title,
            },
            mainContentOfPage: {
              "@type": "Person",
              "@id": `${url}#person`,
              name: name,
              jobTitle: title,
            },
            speakable: {
              "@type": "SpeakableSpecification",
              cssSelector: ["h1", "h2", "h3", "p"],
            },
          }),
        }}
      />

      {/* Organization Schema for company */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Organization",
            "@id": "https://brotecs.com#organization",
            name: company,
            url: "https://brotecs.com",
            logo: "https://brotecs.com/logo.png",
            description:
              "Technology company specializing in VoIP solutions and software development",
            address: {
              "@type": "PostalAddress",
              addressLocality: "Dhaka",
              addressCountry: "Bangladesh",
            },
            employee: {
              "@type": "Person",
              "@id": `${url}#person`,
              name: name,
              jobTitle: title,
            },
          }),
        }}
      />

      {/* FAQ Schema for common questions */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "FAQPage",
            mainEntity: [
              {
                "@type": "Question",
                name: `Who is ${name}?`,
                acceptedAnswer: {
                  "@type": "Answer",
                  text: `${name} is a ${title} based in ${location}, working at ${company}. ${description}`,
                },
              },
              {
                "@type": "Question",
                name: `What technologies does ${name} work with?`,
                acceptedAnswer: {
                  "@type": "Answer",
                  text: `${name} works with ${skills
                    .slice(0, 10)
                    .join(
                      ", "
                    )}, and various other modern web technologies for full stack development.`,
                },
              },
              {
                "@type": "Question",
                name: `How can I contact ${name}?`,
                acceptedAnswer: {
                  "@type": "Answer",
                  text: `You can contact ${name} via email at admin@mahbub.dev, support@mahbub.dev, or mahbub@lunetsoft.com. ${name} is based in ${location} and available for freelance projects and full-time opportunities.`,
                },
              },
              {
                "@type": "Question",
                name: `What services does ${name} offer?`,
                acceptedAnswer: {
                  "@type": "Answer",
                  text: `${name} offers full stack web development, mobile app development, VoIP solutions, system architecture, cloud computing services, and technical consulting.`,
                },
              },
            ],
          }),
        }}
      />
    </>
  );
};

export default AboutSEO;
